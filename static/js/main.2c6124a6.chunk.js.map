{"version":3,"sources":["Header/NavBar/styles/style.module.css","Components/LinkComponents/LinkComponent.tsx","Header/NavBar/NavBarPC/NavBarPC.tsx","Components/GetGeoPositionComponent/GeoPositionComponent.ts","Header/NavBar/NavBarMobile/NavBarMobile.tsx","Header/NavBar/NavBar.tsx","Footer/Footer.tsx","Pages/Main/Main.tsx","Pages/Category/Category.tsx","Pages/Registration/RegistrationForm/RegistrationForm/RegistrationFormComponents/ShowPassword.tsx","Pages/Registration/RegistrationForm/RegistrationForm/RegistrationFormComponents/FormPrompt.tsx","Components/InputMaskComponent/InputMaskComponent.tsx","Pages/Registration/RegistrationForm/RegistrationForm/RegistrationForm.tsx","Pages/Registration/SignUp.tsx","Pages/SignIn/GoogleLogin/GoogleLogin.tsx","Pages/SignIn/SignIn.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","LinkComponent","className","path","text","to","onClick","NavBarPC","pages","navProps","map","page","index","wrapper","nav_PC","getGeoPosition","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","accuracy","UserPositionContext","createContext","NavBarMobile","useState","drawerClassName","setDrawerClassName","menuClassName","setMenuClassName","userName","localStorage","getItem","userAvatar","userPosition","useContext","console","log","onTouchStart","e","src","width","height","NavBar","styleNavBar","window","screen","Footer","Main","Category","ShowPassword","onShowPassword","onHidePassword","icon","setIcon","FormPrompt","message","error","InputMaskComponent","id","type","name","mask","title","pattern","cursorPosition","setCursorPosition","placeholder","defaultValue","onChange","currentTarget","value","length","matrix","i","def","replace","val","a","test","charAt","onBlur","element","setSelectionRange","RegistrationForm","userNameCompleted","setUserNameCompleted","userEmailComleted","setUserEmailComleted","userPhoneNumberComleted","setUserPhoneNumberComleted","userPasswordComleted","setUserPasswordComleted","buttonDisabled","setButtonDisabled","promptProps","setPromptProps","toggleInputTypeRef","useRef","inputHandler","inputId","inputValue","checkData","target","checkedText","match","checkedValue","completed","errorMessage","completedHandler","changePasswordHandler","current","useEffect","onSubmit","preventDefault","htmlFor","labelText","ref","disabled","SignUp","GoogleSignIn","response","secretID","secret","web","client_id","React","userProfile","setUserProfile","responseGoogle","undefined","profileObj","imageUrl","setItem","clientId","onSuccess","onFailure","cookiePolicy","alt","SignIn","App","touchMoveState","setTouchMoveState","touchStartValue","setTouchStartValue","setShowMobileNav","onWheel","nativeEvent","onTouchMove","changedTouches","screenY","onTouchEnd","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c6124a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_PC\":\"style_nav_PC__3upWx\",\"container\":\"style_container__3aErH\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './style/HeaderLink.css';\r\nimport './style/FormLink.css';\r\nimport { ILinkProps } from '../../Interfaces';\r\n\r\nexport const LinkComponent: React.FC<ILinkProps> = ({ className, path, text }) => {\r\n    const clickHanlker = () => true;\r\n\r\n    return (\r\n        <NavLink to={path} className={className} onClick={clickHanlker}>\r\n            {text}\r\n        </NavLink>\r\n    )\r\n}","import React from \"react\";\r\nimport wrapper from '../styles/style.module.css';\r\nimport { LinkComponent } from \"../../../Components/LinkComponents/LinkComponent\"\r\nimport { IArrayLinkProps } from \"../../../Interfaces\"\r\n\r\nexport const NavBarPC: React.FC<IArrayLinkProps> = ({ navProps }) => {\r\n\r\n    const pages = navProps.map((page, index) =>\r\n        < LinkComponent key={index} {...page} />\r\n    );\r\n\r\n    return (\r\n        <nav className={wrapper.nav_PC}>\r\n            {pages}\r\n        </nav >\r\n    )\r\n}","import { createContext } from \"react\";\r\nimport { IGeoCoords } from \"../../Interfaces\";\r\nexport let getGeoPosition = ''\r\nconst success = (pos: IGeoCoords) => {\r\n    getGeoPosition = `широта: ${pos.coords.latitude}, долгота: ${pos.coords.longitude}, точность: ${pos.coords.accuracy} метров`;\r\n};\r\n\r\nif (navigator.geolocation) navigator.geolocation.getCurrentPosition(success);\r\n\r\nexport const UserPositionContext = createContext('');","import React, { useState, useContext } from \"react\";\r\nimport { LinkComponent } from \"../../../Components/LinkComponents/LinkComponent\";\r\nimport { IArrayLinkProps } from \"../../../Interfaces\";\r\nimport '../styles/style.css';\r\nimport { UserPositionContext } from \"../../../Components/GetGeoPositionComponent/GeoPositionComponent\";\r\n\r\nexport const NavBarMobile: React.FC<IArrayLinkProps> = ({ navProps }) => {\r\n    const [drawerClassName, setDrawerClassName] = useState<string>('drawer-off');\r\n    const [menuClassName, setMenuClassName] = useState<string>('nav-container__menu');\r\n\r\n    let userName = localStorage.getItem('googleSignInName');\r\n    let userAvatar = localStorage.getItem('googleSignInImageUrl');\r\n\r\n    const pages = navProps.map((page, index) =>\r\n        < LinkComponent key={index} {...page} />\r\n    );\r\n\r\n    const toggleClassName = (e: React.TouchEvent<HTMLDivElement>) => {\r\n        menuClassName === 'nav-container__menu' ?\r\n            setMenuClassName('nav-container__menu change') :\r\n            setMenuClassName('nav-container__menu')\r\n        drawerClassName === 'drawer-off' ?\r\n            setDrawerClassName('drawer-on') :\r\n            setDrawerClassName('drawer-off')\r\n    }\r\n\r\n    const userPosition = useContext(UserPositionContext);\r\n    console.log(userPosition)\r\n\r\n    return (\r\n        <div className=\"nav-container unselectable\"\r\n            onTouchStart={toggleClassName}>\r\n            < div className={menuClassName}  >\r\n                <div className=\"menu__top-line\"></div>\r\n                <div className=\"menu__middle-line\"></div>\r\n                <div className=\"menu__bottom-line\"></div>\r\n            </div >\r\n            <div className={drawerClassName === 'drawer-on' ? 'nav-container_lock' : ''}\r\n                onClick={() => setDrawerClassName('drawer-off')}>\r\n                <div className={drawerClassName}>\r\n                    <div className=\"user-data\">\r\n                        Вы вошли как {userName}\r\n                        {userAvatar !== null && <img src={userAvatar} width=\"40\" height=\"40\" className=\"user-data__avatar\" />}\r\n                        <div className=\"user-data__position\">\r\n                            Ваши координаты: {userPosition}\r\n                        </div>\r\n                    </div>\r\n                    {pages}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport { NavBarPC } from \"./NavBarPC/NavBarPC\";\r\nimport { NavBarMobile } from \"./NavBarMobile/NavBarMobile\";\r\nimport { ILinkProps, IArrayLinkProps } from \"../.././Interfaces\"\r\n\r\nexport const NavBar: React.FC = () => {\r\n    const styleNavBar = 'header-link';\r\n\r\n    const mainPage: ILinkProps = {\r\n        text: 'Главная',\r\n        path: \"/\",\r\n        className: styleNavBar\r\n    }\r\n\r\n    const categoryPage: ILinkProps = {\r\n        text: 'Категории',\r\n        path: \"/cat\",\r\n        className: styleNavBar\r\n    }\r\n\r\n    const signUp: ILinkProps = {\r\n        text: 'Зарегистрироваться',\r\n        path: \"/sign-up\",\r\n        className: styleNavBar\r\n    }\r\n\r\n    const navProps: IArrayLinkProps = { navProps: [mainPage, categoryPage, signUp] }\r\n\r\n    return (\r\n        window.screen.width < 767 ? <NavBarMobile {...navProps} /> : <NavBarPC {...navProps} />\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport './style/style.css'\r\n\r\nexport const Footer: React.FC = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer-wrapper\">\r\n                footer\r\n            </div>\r\n\r\n        </footer>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <h2>Hello, this main page</h2>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad laboriosam, ipsum ipsam et nisi minima numquam ut magnam, laborum aliquam iste eum delectus in ea sed unde, id sequi quaerat?\r\n            </p>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\n\r\nexport const Category: React.FC = () => {\r\n    return (\r\n        <h2>Category</h2>\r\n    )\r\n};","import React, { useState } from \"react\";\r\nimport './style/style.css';\r\nimport { IChangePassword } from \"../../../../../Interfaces\";\r\n\r\nexport const ShowPassword: React.FC<IChangePassword> = ({ onShowPassword, onHidePassword }) => {\r\n    const [icon, setIcon] = useState('icon-unchecked');\r\n\r\n\r\n    const clickHandler = (e: React.MouseEvent<HTMLElement>) => {\r\n        if (icon === 'icon-unchecked') {\r\n            setIcon('icon-checked');\r\n            onShowPassword();\r\n        } else {\r\n            setIcon('icon-unchecked')\r\n            onHidePassword();\r\n        }\r\n    };\r\n    return (\r\n        <div onClick={clickHandler} className=\"show-password\">\r\n            <div className={icon} >\r\n            </div>\r\n            Показать пароль\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { IPrompt } from \"../../../../../Interfaces\"\r\n\r\nexport const FormPrompt: React.FC<IPrompt> = ({ message, error }) => {\r\n\r\n    return (\r\n        <i className={`${error && 'form-prompt_error'}`}>\r\n            {message}\r\n        </i>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { IInputProps, IHTMLInputElement } from \"../../Interfaces\";\r\n\r\nexport const InputMaskComponent: React.FC<IInputProps> = ({ id, type, name, className, mask, title, pattern }) => {\r\n    const [cursorPosition, setCursorPosition] = useState<number>(4);\r\n\r\n    const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        e.currentTarget.value.length <= 3 ? setCursorPosition(4) : setCursorPosition(e.currentTarget.value.length + 1);\r\n        const matrix = mask;\r\n        let i = 0;\r\n        let def = matrix.replace(/\\D/g, \"\");\r\n        let val = e.currentTarget.value.replace(/\\D/g, \"\");\r\n        if (def.length >= val.length) val = def;\r\n        e.currentTarget.value = matrix.replace(/./g, function (a) {\r\n            return /[_\\d]/.test(a) && i < val.length ? val.charAt(i++) : i >= val.length ? \"\" : a\r\n        })\r\n    };\r\n\r\n    const blurHandler = (element: HTMLInputElement) => {\r\n        if (element.value.length <= 4) element.value = mask;\r\n    };\r\n\r\n    return (\r\n        <input\r\n            id={id}\r\n            type={type}\r\n            name={name}\r\n            className={className}\r\n            pattern={pattern}\r\n            placeholder={mask}\r\n            title={title}\r\n            defaultValue={mask}\r\n            onChange={changeHandler}\r\n            onBlur={(e: React.ChangeEvent<HTMLInputElement>) => blurHandler(e.currentTarget)}\r\n            onClick={(e: React.MouseEvent<IHTMLInputElement>) => e.currentTarget.setSelectionRange(cursorPosition, cursorPosition)}\r\n        />\r\n    )\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { IChangePassword, IPrompt, IInputProps } from \"../../../../Interfaces\";\r\nimport { ShowPassword } from \"./RegistrationFormComponents/ShowPassword\";\r\nimport { FormPrompt } from \"./RegistrationFormComponents/FormPrompt\";\r\nimport { InputMaskComponent } from \"../../../../Components/InputMaskComponent/InputMaskComponent\";\r\n\r\nexport const RegistrationForm: React.FC = () => {\r\n    const [userNameCompleted, setUserNameCompleted] = useState<boolean>(false);\r\n    const [userEmailComleted, setUserEmailComleted] = useState<boolean>(false);\r\n    const [userPhoneNumberComleted, setUserPhoneNumberComleted] = useState<boolean>(false);\r\n    const [userPasswordComleted, setUserPasswordComleted] = useState<boolean>(false);\r\n    const [buttonDisabled, setButtonDisabled] = useState<boolean>(true);\r\n    const [promptProps, setPromptProps] = useState<IPrompt>({\r\n        id: '',\r\n        message: '',\r\n        error: false\r\n    });\r\n\r\n    const toggleInputTypeRef = useRef<HTMLInputElement>(null);\r\n\r\n    const tel: IInputProps = {\r\n        id: \"userPhone\",\r\n        type: \"tel\",\r\n        name: \"userPhone\",\r\n        className: 'authorization-form_input-border-none',\r\n        mask: \"+7 (___) ___ ____\",\r\n        title: `Не может содержать цифры и символы кроме пробела и дефиса`,\r\n        pattern: \"\\+7 \\s?[\\(]{0,1}9[0-9]{2}[\\)]{0,1}\\s?\\d{3}[ ]{0,1}\\d{4}[ ]{0,1}\",\r\n        labelText: 'Номер телефона'\r\n    }\r\n\r\n\r\n    const formHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        buttonDisabled === false ? console.log('succes') : console.log('how could you press the button? it should be blocked');\r\n    };\r\n\r\n    const inputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const completedHandler = (type: string, completed: boolean) => {\r\n            if (type === 'userName') setUserNameCompleted(completed);\r\n            if (type === 'userEmail') setUserEmailComleted(completed);\r\n            if (type === 'userPhone') setUserPhoneNumberComleted(completed);\r\n            if (type === 'userPassword') setUserPasswordComleted(completed);\r\n        };\r\n\r\n        const getCheck = (inputId: string, inputValue: string) => {\r\n            if (inputId === 'userName') {\r\n                return {\r\n                    message: 'Не может содержать цифры и символы кроме пробела и дефиса',\r\n                    checkedText: inputValue.match(/[a-zA-Zа-яА-Я- ]/g)\r\n                }\r\n            } else if (inputId === 'userEmail') {\r\n                return {\r\n                    message: 'Может содержать email',\r\n                    checkedText: inputValue.match(/[a-zA-Z0-9.@]/g)\r\n                }\r\n            } else if (inputId === 'userPhone') {\r\n                return {\r\n                    message: 'Не может содержать цифры и символы кроме пробела и дефиса',\r\n                    checkedText: inputValue.match(/[0-9()-+ ]/g)\r\n                }\r\n            } else if (inputId === 'userPassword') {\r\n                return {\r\n                    message: 'Может содержать цифры и латинские буквы верхнего и нижнего регистра, минимум 4 символа',\r\n                    checkedText: inputValue.match(/[a-zA-Z0-9]/g)\r\n                }\r\n            } else {\r\n                console.log(`please add input:${inputId} in this function`);\r\n            }\r\n        };\r\n\r\n        const checkData = getCheck(e.target.id, e.target.value);\r\n        const message = checkData!.message;\r\n        const checkedValue = checkData!.checkedText;\r\n\r\n        let error = true;\r\n        let completed = true;\r\n\r\n        const errorMessage = (error: boolean, completed: boolean) => {\r\n            setPromptProps({\r\n                id: e.target.id,\r\n                message: message,\r\n                error: error\r\n            });\r\n            completedHandler(e.target.id, completed);\r\n        };\r\n\r\n        if (checkedValue === null && e.target.value.length > 0) {\r\n            errorMessage(error, !completed);\r\n        } else if (checkedValue !== null && checkedValue!.length > 0) {\r\n            checkedValue!.length === e.target.value.length ? errorMessage(!error, completed) : errorMessage(error, !completed);\r\n        } else {\r\n            e.target.value.length < 1 ? errorMessage(!error, !completed) : errorMessage(error, !completed);\r\n        };\r\n    };\r\n\r\n    const showPassword = () => {\r\n        if (toggleInputTypeRef.current?.type === 'password') toggleInputTypeRef.current.type = 'text';\r\n    };\r\n\r\n    const hidePassword = () => {\r\n        if (toggleInputTypeRef.current?.type === 'text') toggleInputTypeRef.current.type = 'password';\r\n    };\r\n\r\n    const changePasswordHandler: IChangePassword = {\r\n        onShowPassword: showPassword,\r\n        onHidePassword: hidePassword\r\n    };\r\n\r\n    useEffect(() => {\r\n        userNameCompleted === true &&\r\n            userEmailComleted === true &&\r\n            userPhoneNumberComleted === true &&\r\n            userPasswordComleted === true ?\r\n            setButtonDisabled(false) : setButtonDisabled(true);\r\n    }, [userNameCompleted, userEmailComleted, userPhoneNumberComleted, userPasswordComleted])\r\n\r\n    return (\r\n        <form\r\n            onSubmit={formHandler}\r\n            className=\"authorization-form\">\r\n            <div className=\"form-prompt\">\r\n                {promptProps.id === \"userName\" && <FormPrompt {...promptProps} />}\r\n            </div>\r\n            <label htmlFor=\"userName\">Имя</label>\r\n            <input type=\"text\" name=\"userName\" id=\"userName\"\r\n                className=\"authorization-form_input-border-none\"\r\n                placeholder=\"Введите ваше имя\"\r\n                onChange={inputHandler}\r\n                onClick={() => setPromptProps({\r\n                    id: 'userName',\r\n                    message: 'Не может содержать цифры и символы кроме пробела и дефиса',\r\n                    error: false\r\n                })}\r\n            />\r\n            <div className=\"form-prompt\">\r\n                {promptProps.id === \"userEmail\" && <FormPrompt {...promptProps} />}\r\n            </div>\r\n            <label htmlFor=\"userEmail\">Email</label>\r\n            <input type=\"email\" name=\"userEmail\" id=\"userEmail\"\r\n                className=\"authorization-form_input-border-none\"\r\n                placeholder=\"email@email.com\"\r\n                onChange={inputHandler}\r\n                onClick={() => setPromptProps({\r\n                    id: 'userEmail',\r\n                    message: 'Может содержать email',\r\n                    error: false\r\n                })}\r\n            />\r\n            <div className=\"form-prompt\">\r\n                {promptProps.id === \"userPhone\" && <FormPrompt {...promptProps} />}\r\n            </div>\r\n\r\n            <div className=\"authorization-form__tel-wrapper\"\r\n                onChange={inputHandler}\r\n                onClick={() =>\r\n                    setPromptProps({\r\n                        id: 'userPhone',\r\n                        message: 'Может содержать 11 цифр, круглые скобки, дефис и знак плюс',\r\n                        error: false\r\n                    })\r\n                }\r\n            >\r\n                <label htmlFor=\"userPhone\">Номер телефона</label>\r\n                < InputMaskComponent  {...tel} />\r\n            </div>\r\n            <div className=\"form-prompt\">\r\n                {promptProps.id === \"userPassword\" && <FormPrompt {...promptProps} />}\r\n            </div>\r\n            <label htmlFor=\"userPassword\">Пароль</label>\r\n            <input type=\"password\" name=\"userPassword\" id=\"userPassword\"\r\n                className=\"authorization-form_input-border-none\"\r\n                placeholder=\"Придумайте ваш пароль\"\r\n                ref={toggleInputTypeRef}\r\n                onChange={inputHandler}\r\n                onClick={() => setPromptProps({\r\n                    id: 'userPassword',\r\n                    message: 'Может содержать цифры и латинские буквы верхнего и нижнего регистра, минимум 4 символа',\r\n                    error: false\r\n                })}\r\n            />\r\n            <ShowPassword {...changePasswordHandler} />\r\n            <button type=\"submit\"\r\n                disabled={buttonDisabled ? true : false}\r\n                className={`authorization-form__btn ${!buttonDisabled && 'authorization-form_active-btn'}`}>\r\n                Зарегистрироваться\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { RegistrationForm } from './RegistrationForm/RegistrationForm/RegistrationForm';\r\nimport { LinkComponent } from \"../../Components/LinkComponents/LinkComponent\"\r\n\r\n// import { AutoriazationForm } from \"./AutoriazationForm\";\r\n\r\nexport const SignUp: React.FC = () => {\r\n\r\n    const formLink = {\r\n        text: 'Войти',\r\n        path: \"/sign-in\",\r\n        className: \"form-link\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"authorization-container unselectable\">\r\n            <h2>Регистрация</h2>\r\n            <p>\r\n                Уже есть аккаунт?\r\n                <LinkComponent {...formLink} />\r\n            </p>\r\n            <RegistrationForm />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport secret from './secert.json'\r\n\r\n\r\n\r\nexport const GoogleSignIn: React.FC = (response: any) => {\r\n\r\n    const secretID = secret.web.client_id;\r\n\r\n    const [userProfile, setUserProfile] = React.useState<any>({\r\n        userName: '',\r\n        userAvatar: ''\r\n    });\r\n\r\n\r\n    const responseGoogle = (response: any) => {\r\n        if (response.profileObj !== undefined) {\r\n            setUserProfile({\r\n                userName: response.profileObj.name,\r\n                userAvatar: response.profileObj.imageUrl,\r\n            })\r\n            localStorage.setItem('googleSignInName', response.profileObj.name);\r\n            localStorage.setItem('googleSignInImageUrl', response.profileObj.imageUrl);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <GoogleLogin\r\n                clientId={secretID}\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            >\r\n                <span>Войти через Google</span>\r\n            </GoogleLogin>\r\n            <h3> Вы вошли как {userProfile.userName}\r\n            </h3>\r\n            <img src={userProfile.userAvatar} alt='you avatar' />\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { GoogleSignIn } from \"./GoogleLogin/GoogleLogin\";\r\n\r\nexport const SignIn: React.FC = () => {\r\n    return (\r\n        <div className=\"sign-in\">\r\n            <h2>SignIn</h2>\r\n            <GoogleSignIn />\r\n        </div>\r\n    )\r\n}","import React, { useState, WheelEvent } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { NavBar } from './Header/NavBar/NavBar';\nimport { Footer } from './Footer/Footer';\nimport './style/App.css';\nimport { Main } from './Pages/Main/Main';\nimport { Category } from './Pages/Category/Category';\nimport { SignUp } from './Pages/Registration/SignUp';\nimport { SignIn } from './Pages/SignIn/SignIn';\nimport { INavBarMobileProps } from './Interfaces';\nimport { UserPositionContext, getGeoPosition } from './Components/GetGeoPositionComponent/GeoPositionComponent';\n\nexport const App: React.FC<INavBarMobileProps> = () => {\n\n  const [touchMoveState, setTouchMoveState] = useState(false);\n  const [touchStartValue, setTouchStartValue] = useState(0);\n  const [showMobileNav, setShowMobileNav] = useState(true);\n\n\n  const wheelHandler = (e: WheelEvent<HTMLDivElement>) => e.nativeEvent.type === 'wheel' ? setShowMobileNav(true) : setShowMobileNav(false);\n\n  const touchMoveHandler = (e: React.TouchEvent<HTMLDivElement>) => setTouchMoveState(true);\n\n  const touchStartHandler = (e: React.TouchEvent<HTMLDivElement>) => {\n    setTouchMoveState(false);\n    setTouchStartValue(e.changedTouches[0].screenY);\n  };\n\n  const touchEndHandler = (e: React.TouchEvent<HTMLDivElement>) => {\n    if (touchMoveState === true) {\n      touchStartValue < e.changedTouches[0].screenY ? setShowMobileNav(true) : setShowMobileNav(false);\n    }\n  };\n\n\n\n  return (\n\n    <div className=\"container\"\n      onWheel={wheelHandler}\n      onTouchMove={touchMoveHandler}\n      onTouchStart={touchStartHandler}\n      onTouchEnd={touchEndHandler}\n    >\n      <header>\n        <UserPositionContext.Provider value={getGeoPosition}>\n          <NavBar />\n        </UserPositionContext.Provider>\n      </header>\n      <main>\n        <Routes>\n          <Route path=\"https://s-gumerov.github.io/\" element={<Main />} />\n          <Route path=\"https://s-gumerov.github.io/sign-up\" element={<SignUp />} />\n          <Route path=\"https://s-gumerov.github.io/cat\" element={<Category />} />\n          <Route path=\"/\" element={<Main />} />\n          <Route path=\"/cat\" element={<Category />} />\n          <Route path=\"/sign-in\" element={<SignIn />} />\n          <Route path=\"/sign-up\" element={<SignUp />} />\n        </Routes>\n      </main>\n      <Footer />\n    </div>\n\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}