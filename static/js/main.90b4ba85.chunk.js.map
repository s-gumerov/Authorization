{"version":3,"sources":["Header/NavBar/styles/style.module.css","Components/LinkComponents/LinkComponent.tsx","Header/NavBar/NavBarPC/NavBarPC.tsx","Header/NavBar/NavBarMobile/NavBarMobile.tsx","Header/NavBar/NavBar.tsx","Pages/Test/InputMaskComponent.tsx","Pages/Test/InputsMaskContainer.tsx","Pages/Test/TestContainer.tsx","Footer/Footer.tsx","Pages/Main/Main.tsx","Pages/Category/Category.tsx","Pages/Registration/RegistrationForm/RegistrationForm/RegistrationFormComponents/ShowPassword.tsx","Pages/Registration/RegistrationForm/RegistrationForm/RegistrationFormComponents/FormPrompt.tsx","Pages/Registration/RegistrationForm/RegistrationForm/RegistrationForm.tsx","Pages/Registration/SignUp.tsx","Pages/SignIn/SignIn.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","LinkComponent","className","path","text","to","onClick","NavBarPC","pages","navProps","map","page","index","wrapper","nav_PC","NavBarMobile","useState","drawerClassName","setDrawerClassName","menuClassName","setMenuClassName","onTouchStart","e","NavBar","styleNavBar","window","screen","width","InputMaskComponent","id","type","name","mask","title","pattern","placeholder","defaultValue","onChange","matrix","i","def","replace","val","target","value","length","a","test","charAt","onBlur","position","focus","setSelectionRange","createTextRange","range","collapse","moveEnd","moveStart","select","setCursorPosition","InputsMaskContainer","inpputs","inputs","input","htmlFor","TestContainer","inputsArray","labelText","Footer","Main","Category","ShowPassword","onShowPassword","onHidePassword","icon","setIcon","FormPrompt","message","error","RegistrationForm","userNameCompleted","setUserNameCompleted","userEmailComleted","setUserEmailComleted","userPhoneNumberComleted","setUserPhoneNumberComleted","userPasswordComleted","setUserPasswordComleted","buttonDisabled","setButtonDisabled","promptProps","setPromptProps","toggleInputTypeRef","useRef","inputHandler","inputId","inputValue","checkData","checkedText","match","console","log","checkedValue","completed","errorMessage","completedHandler","changePasswordHandler","current","useEffect","onSubmit","preventDefault","required","minLength","maxLength","ref","disabled","SignUp","SignIn","App","touchMoveState","setTouchMoveState","touchStartValue","setTouchStartValue","setShowMobileNav","onWheel","nativeEvent","onTouchMove","changedTouches","screenY","onTouchEnd","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90b4ba85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_PC\":\"style_nav_PC__3upWx\",\"container\":\"style_container__3aErH\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './style/HeaderLink.css';\r\nimport './style/FormLink.css';\r\nimport { ILinkProps } from '../../Interfaces';\r\n\r\nexport const LinkComponent: React.FC<ILinkProps> = ({ className, path, text }) => {\r\n    const clickHanlker = () => true;\r\n\r\n    return (\r\n        <NavLink to={path} className={className} onClick={clickHanlker}>\r\n            {text}\r\n        </NavLink>\r\n    )\r\n}","import React from \"react\";\r\nimport wrapper from '../styles/style.module.css';\r\nimport { LinkComponent } from \"../../../Components/LinkComponents/LinkComponent\"\r\nimport { IArrayLinkProps } from \"../../../Interfaces\"\r\n\r\nexport const NavBarPC: React.FC<IArrayLinkProps> = ({ navProps }) => {\r\n\r\n    const pages = navProps.map((page, index) =>\r\n        < LinkComponent key={index} {...page} />\r\n    );\r\n\r\n    return (\r\n        <nav className={wrapper.nav_PC}>\r\n            {pages}\r\n        </nav >\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport { LinkComponent } from \"../../../Components/LinkComponents/LinkComponent\"\r\nimport { IArrayLinkProps } from \"../../../Interfaces\"\r\nimport '../styles/style.css';\r\n\r\nexport const NavBarMobile: React.FC<IArrayLinkProps> = ({ navProps }) => {\r\n    const [drawerClassName, setDrawerClassName] = useState<string>('drawer-off');\r\n    const [menuClassName, setMenuClassName] = useState<string>('nav-container__menu');\r\n\r\n    const pages = navProps.map((page, index) =>\r\n        < LinkComponent key={index} {...page} />\r\n    );\r\n\r\n    const toggleClassName = (e: React.TouchEvent<HTMLDivElement>) => {\r\n        menuClassName === 'nav-container__menu' ?\r\n            setMenuClassName('nav-container__menu change') :\r\n            setMenuClassName('nav-container__menu')\r\n        drawerClassName === 'drawer-off' ?\r\n            setDrawerClassName('drawer-on') :\r\n            setDrawerClassName('drawer-off')\r\n    }\r\n\r\n    return (\r\n        <div className=\"nav-container unselectable\"\r\n            onTouchStart={toggleClassName}>\r\n            < div className={menuClassName}  >\r\n                <div className=\"bar1\"></div>\r\n                <div className=\"bar2\"></div>\r\n                <div className=\"bar3\"></div>\r\n            </div >\r\n            <div className={drawerClassName === 'drawer-on' ? 'nav-container_lock' : ''}\r\n                onClick={() => setDrawerClassName('drawer-off')}>\r\n                <div className={drawerClassName}>\r\n                    {pages}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport { NavBarPC } from \"./NavBarPC/NavBarPC\";\r\nimport { NavBarMobile } from \"./NavBarMobile/NavBarMobile\";\r\nimport { ILinkProps, IArrayLinkProps } from \"../.././Interfaces\"\r\n\r\nexport const NavBar: React.FC = () => {\r\n    const styleNavBar = 'header-link';\r\n\r\n    const mainPage: ILinkProps = {\r\n        text: 'Главная',\r\n        path: \"/\",\r\n        className: styleNavBar\r\n    }\r\n\r\n    const categoryPage: ILinkProps = {\r\n        text: 'Категории',\r\n        path: \"/cat\",\r\n        className: styleNavBar\r\n    }\r\n\r\n    const signUp: ILinkProps = {\r\n        text: 'Зарегистрироваться',\r\n        path: \"/sign-up\",\r\n        className: styleNavBar\r\n    }\r\n\r\n    const test: ILinkProps = {\r\n        text: 'Test',\r\n        path: \"/test\",\r\n        className: styleNavBar\r\n    }\r\n\r\n    const navProps: IArrayLinkProps = { navProps: [mainPage, categoryPage, signUp, test] }\r\n\r\n    return (\r\n        window.screen.width < 767 ? <NavBarMobile {...navProps} /> : <NavBarPC {...navProps} />\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { IInputProps, IHTMLInputElement } from \"../../Interfaces\";\r\n\r\n\r\nexport const InputMaskComponent: React.FC<IInputProps> = ({ id, type, name, className, mask, title, pattern }) => {\r\n    const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const matrix = mask;\r\n        let i = 0;\r\n        let def = matrix.replace(/\\D/g, \"\");\r\n        let val = e.target.value.replace(/\\D/g, \"\");\r\n        if (def.length >= val.length) val = def;\r\n        e.target.value = matrix.replace(/./g, function (a) {\r\n            return /[_\\d]/.test(a) && i < val.length ? val.charAt(i++) : i >= val.length ? \"\" : a\r\n        })\r\n    };\r\n\r\n    const blurHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const setCursorPosition = (e: React.ChangeEvent<IHTMLInputElement>, position: number) => {\r\n            e.target.focus();\r\n            if (e.target.setSelectionRange) {\r\n                e.target.setSelectionRange(position, position);\r\n            }\r\n            else if (e.target.createTextRange) {\r\n                var range = e.target.createTextRange();\r\n                range.collapse(true);\r\n                range.moveEnd(\"character\", position);\r\n                range.moveStart(\"character\", position);\r\n                range.select();\r\n            }\r\n        };\r\n\r\n        e.target.value.length === 2 ? e.target.value = mask : setCursorPosition(e, e.target.value.length);\r\n    };\r\n    return (\r\n        <input\r\n            id={id}\r\n            type={type}\r\n            name={name}\r\n            className={className}\r\n            pattern={pattern}\r\n            placeholder={mask}\r\n            title={title}\r\n            defaultValue={mask}\r\n            onChange={changeHandler}\r\n            onBlur={blurHandler}\r\n        />\r\n    )\r\n};","import React from \"react\";\r\nimport { IInputArrayProps } from \"../../Interfaces\";\r\nimport { InputMaskComponent } from \"./InputMaskComponent\";\r\n\r\nexport const InputsMaskContainer: React.FC<IInputArrayProps> = ({ inputs }) => {\r\n    const inpputs = inputs.map((input, index) =>\r\n        <label key={index} htmlFor={input.id}>\r\n            < InputMaskComponent key={index} {...input} />\r\n        </label>\r\n\r\n    );\r\n\r\n\r\n    return (\r\n        <>\r\n            {inpputs}\r\n        </>\r\n    )\r\n};","import React from \"react\";\r\nimport { InputsMaskContainer } from \"./InputsMaskContainer\";\r\nimport { IInputProps, IInputArrayProps } from \"../../Interfaces\";\r\n\r\nexport const TestContainer: React.FC = () => {\r\n\r\n    const tel: IInputProps = {\r\n        id: \"tel\",\r\n        type: \"tel\",\r\n        name: \"tel\",\r\n        className: '',\r\n        mask: \"+7 (___) ___ ____\",\r\n        title: `titleValue`,\r\n        pattern: \"\\+7 \\s?[\\(]{0,1}9[0-9]{2}[\\)]{0,1}\\s?\\d{3}[ ]{0,1}\\d{4}[ ]{0,1}\",\r\n        labelText: 'Click me'\r\n    }\r\n\r\n    const inputsArray: IInputArrayProps = { inputs: [tel] }\r\n\r\n    return (\r\n        <InputsMaskContainer {...inputsArray} />\r\n    )\r\n}","import React from \"react\";\r\nimport './style/style.css'\r\n\r\nexport const Footer: React.FC = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer-wrapper\">\r\n                footer\r\n            </div>\r\n\r\n        </footer>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <>\r\n            <h2>Hello, this main page</h2>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad laboriosam, ipsum ipsam et nisi minima numquam ut magnam, laborum aliquam iste eum delectus in ea sed unde, id sequi quaerat?\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad laboriosam, ipsum ipsam et nisi minima numquam ut magnam, laborum aliquam iste eum delectus in ea sed unde, id sequi quaerat?\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad laboriosam, ipsum ipsam et nisi minima numquam ut magnam, laborum aliquam iste eum delectus in ea sed unde, id sequi quaerat?\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad laboriosam, ipsum ipsam et nisi minima numquam ut magnam, laborum aliquam iste eum delectus in ea sed unde, id sequi quaerat?\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad laboriosam, ipsum ipsam et nisi minima numquam ut magnam, laborum aliquam iste eum delectus in ea sed unde, id sequi quaerat?\r\n            </p>\r\n        </>\r\n    )\r\n};","import React from \"react\";\r\n\r\nexport const Category: React.FC = () => {\r\n    return (\r\n        <h2>Category</h2>\r\n    )\r\n};","import React, { useState } from \"react\";\r\nimport './style/style.css';\r\nimport { IChangePassword } from \"../../../../../Interfaces\";\r\n\r\nexport const ShowPassword: React.FC<IChangePassword> = ({ onShowPassword, onHidePassword }) => {\r\n    const [icon, setIcon] = useState('icon-unchecked');\r\n\r\n\r\n    const clickHandler = (e: React.MouseEvent<HTMLElement>) => {\r\n        if (icon === 'icon-unchecked') {\r\n            setIcon('icon-checked');\r\n            onShowPassword();\r\n        } else {\r\n            setIcon('icon-unchecked')\r\n            onHidePassword();\r\n        }\r\n    };\r\n    return (\r\n        <div onClick={clickHandler} className=\"show-password\">\r\n            <div className={icon} >\r\n            </div>\r\n            Показать пароль\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { IPrompt } from \"../../../../../Interfaces\"\r\n\r\nexport const FormPrompt: React.FC<IPrompt> = ({ message, error }) => {\r\n\r\n    return (\r\n        <i className={`${error && 'form-prompt_error'}`}>\r\n            {message}\r\n        </i>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { IChangePassword, IPrompt } from \"../../../../Interfaces\";\r\nimport { ShowPassword } from \"./RegistrationFormComponents/ShowPassword\";\r\nimport { FormPrompt } from \"./RegistrationFormComponents/FormPrompt\";\r\n\r\nexport const RegistrationForm: React.FC = () => {\r\n    const [userNameCompleted, setUserNameCompleted] = useState<boolean>(false);\r\n    const [userEmailComleted, setUserEmailComleted] = useState<boolean>(false);\r\n    const [userPhoneNumberComleted, setUserPhoneNumberComleted] = useState<boolean>(false);\r\n    const [userPasswordComleted, setUserPasswordComleted] = useState<boolean>(false);\r\n    const [buttonDisabled, setButtonDisabled] = useState<boolean>(true);\r\n    const [promptProps, setPromptProps] = useState<IPrompt>({\r\n        id: '',\r\n        message: '',\r\n        error: false\r\n    });\r\n\r\n    const toggleInputTypeRef = useRef<HTMLInputElement>(null);\r\n\r\n    const formHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        buttonDisabled === false ? console.log('succes') : console.log('how could you press the button? it should be blocked');\r\n    };\r\n\r\n    const inputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const completedHandler = (type: string, completed: boolean) => {\r\n            if (type === 'userName') setUserNameCompleted(completed);\r\n            if (type === 'userEmail') setUserEmailComleted(completed);\r\n            if (type === 'userPhone') setUserPhoneNumberComleted(completed);\r\n            if (type === 'userPassword') setUserPasswordComleted(completed);\r\n        };\r\n\r\n        const getCheck = (inputId: string, inputValue: string) => {\r\n            if (inputId === 'userName') {\r\n                return {\r\n                    message: 'Не может содержать цифры и символы кроме пробела и дефиса',\r\n                    checkedText: inputValue.match(/[a-zA-Zа-яА-Я- ]/g)\r\n                }\r\n            } else if (inputId === 'userEmail') {\r\n                return {\r\n                    message: 'Может содержать email',\r\n                    checkedText: inputValue.match(/[a-zA-Z0-9.@]/g)\r\n                }\r\n            } else if (inputId === 'userPhone') {\r\n                return {\r\n                    message: 'Не может содержать цифры и символы кроме пробела и дефиса',\r\n                    checkedText: inputValue.match(/[0-9()-+]/g)\r\n                }\r\n            } else if (inputId === 'userPassword') {\r\n                return {\r\n                    message: 'Может содержать цифры и латинские буквы верхнего и нижнего регистра, минимум 4 символа',\r\n                    checkedText: inputValue.match(/[a-zA-Z0-9]/g)\r\n                }\r\n            } else {\r\n                console.log(`please add input:${inputId} in this function`);\r\n            }\r\n        };\r\n\r\n        const checkData = getCheck(e.target.id, e.target.value);\r\n        const message = checkData!.message;\r\n        const checkedValue = checkData!.checkedText;\r\n\r\n        let error = true;\r\n        let completed = true;\r\n\r\n        const errorMessage = (error: boolean, completed: boolean) => {\r\n            setPromptProps({\r\n                id: e.target.id,\r\n                message: message,\r\n                error: error\r\n            });\r\n            completedHandler(e.target.id, completed);\r\n        };\r\n\r\n        if (checkedValue === null && e.target.value.length > 0) {\r\n            errorMessage(error, !completed);\r\n        } else if (checkedValue !== null && checkedValue!.length > 0) {\r\n            checkedValue!.length === e.target.value.length ? errorMessage(!error, completed) : errorMessage(error, !completed);\r\n        } else {\r\n            e.target.value.length < 1 ? errorMessage(!error, !completed) : errorMessage(error, !completed);\r\n        };\r\n    };\r\n\r\n    const showPassword = () => {\r\n        if (toggleInputTypeRef.current?.type === 'password') toggleInputTypeRef.current.type = 'text';\r\n    };\r\n\r\n    const hidePassword = () => {\r\n        if (toggleInputTypeRef.current?.type === 'text') toggleInputTypeRef.current.type = 'password';\r\n    };\r\n\r\n    const changePasswordHandler: IChangePassword = {\r\n        onShowPassword: showPassword,\r\n        onHidePassword: hidePassword\r\n    };\r\n\r\n    useEffect(() => {\r\n        userNameCompleted === true &&\r\n            userEmailComleted === true &&\r\n            userPhoneNumberComleted === true &&\r\n            userPasswordComleted === true ?\r\n            setButtonDisabled(false) : setButtonDisabled(true);\r\n    }, [userNameCompleted, userEmailComleted, userPhoneNumberComleted, userPasswordComleted])\r\n\r\n    return (\r\n        <form\r\n            onSubmit={formHandler}\r\n            className=\"autorisation-form\">\r\n            <div className=\"form-prompt\">\r\n                {promptProps.id === \"userName\" && <FormPrompt {...promptProps} />}\r\n            </div>\r\n            <label htmlFor=\"userName\">Имя</label>\r\n            <input type=\"text\" name=\"userName\" id=\"userName\"\r\n                placeholder=\"Введите ваше имя\"\r\n                onChange={inputHandler}\r\n                onClick={() => setPromptProps({\r\n                    id: 'userName',\r\n                    message: 'Не может содержать цифры и символы кроме пробела и дефиса',\r\n                    error: false\r\n                })}\r\n            />\r\n            <div className=\"form-prompt\">\r\n                {promptProps.id === \"userEmail\" && <FormPrompt {...promptProps} />}\r\n            </div>\r\n            <label htmlFor=\"userEmail\">Email</label>\r\n            <input type=\"email\" name=\"userEmail\" id=\"userEmail\"\r\n                placeholder=\"Введите ваш email\"\r\n                onChange={inputHandler}\r\n                onClick={() => setPromptProps({\r\n                    id: 'userEmail',\r\n                    message: 'Может содержать email',\r\n                    error: false\r\n                })}\r\n            />\r\n            <div className=\"form-prompt\">\r\n                {promptProps.id === \"userPhone\" && <FormPrompt {...promptProps} />}\r\n            </div>\r\n            <label htmlFor=\"userPhone\">Номер телефона</label>\r\n            <input type=\"tel\" id=\"userPhone\" name=\"userPhone\"\r\n                required={true} minLength={11} maxLength={16}\r\n                placeholder=\"Введите ваш номер телефона\"\r\n                onChange={inputHandler}\r\n                onClick={() =>\r\n                    setPromptProps({\r\n                        id: 'userPhone',\r\n                        message: 'Может содержать 11 цифр, круглые скобки, дефис и знак плюс',\r\n                        error: false\r\n                    })\r\n                }\r\n            />\r\n            <div className=\"form-prompt\">\r\n                {promptProps.id === \"userPassword\" && <FormPrompt {...promptProps} />}\r\n            </div>\r\n            <label htmlFor=\"userPassword\">Пароль</label>\r\n            <input type=\"password\" name=\"userPassword\" id=\"userPassword\"\r\n                placeholder=\"Придумайте ваш пароль\"\r\n                ref={toggleInputTypeRef}\r\n                onChange={inputHandler}\r\n                onClick={() => setPromptProps({\r\n                    id: 'userPassword',\r\n                    message: 'Может содержать цифры и латинские буквы верхнего и нижнего регистра, минимум 4 символа',\r\n                    error: false\r\n                })}\r\n            />\r\n            <ShowPassword {...changePasswordHandler} />\r\n            <button type=\"submit\"\r\n                disabled={buttonDisabled ? true : false}\r\n                className={`autorisation-form__btn ${!buttonDisabled && 'autorisation-form_active-btn'}`}>\r\n                Зарегистрироваться\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { RegistrationForm } from './RegistrationForm/RegistrationForm/RegistrationForm';\r\nimport { LinkComponent } from \"../../Components/LinkComponents/LinkComponent\"\r\n\r\n// import { AutoriazationForm } from \"./AutoriazationForm\";\r\n\r\nexport const SignUp: React.FC = () => {\r\n\r\n    const formLink = {\r\n        text: 'Войти',\r\n        path: \"/sign-in\",\r\n        className: \"form-link\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"autorisation-container unselectable\">\r\n            <h2>Регистрация</h2>\r\n            <p>\r\n                Уже есть аккаунт?\r\n                <LinkComponent {...formLink} />\r\n            </p>\r\n            <RegistrationForm />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const SignIn: React.FC = () => {\r\n    return (\r\n        <h2>SignIn</h2>\r\n    )\r\n}","import React, { useState, WheelEvent } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { NavBar } from './Header/NavBar/NavBar';\nimport { TestContainer } from './Pages/Test/TestContainer';\nimport { Footer } from './Footer/Footer';\nimport './style/App.css';\nimport { Main } from './Pages/Main/Main';\nimport { Category } from './Pages/Category/Category';\nimport { SignUp } from './Pages/Registration/SignUp';\nimport { SignIn } from './Pages/SignIn/SignIn';\nimport { INavBarMobileProps } from './Interfaces';\n\n\n\nexport const App: React.FC<INavBarMobileProps> = () => {\n  const [touchMoveState, setTouchMoveState] = useState(false);\n  const [touchStartValue, setTouchStartValue] = useState(0);\n  const [showMobileNav, setShowMobileNav] = useState(true);\n\n  const wheelHandler = (e: WheelEvent<HTMLDivElement>) => {\n    e.nativeEvent.type === 'wheel' ? setShowMobileNav(true) : setShowMobileNav(false);\n  };\n\n  const touchMoveHandler = (e: React.TouchEvent<HTMLDivElement>) => {\n    setTouchMoveState(true);\n  };\n\n  const touchStartHandler = (e: React.TouchEvent<HTMLDivElement>) => {\n    setTouchMoveState(false);\n    setTouchStartValue(e.changedTouches[0].screenY);\n  };\n\n  const touchEndHandler = (e: React.TouchEvent<HTMLDivElement>) => {\n    if (touchMoveState === true) {\n      touchStartValue < e.changedTouches[0].screenY ? setShowMobileNav(true) : setShowMobileNav(false);\n    }\n  };\n\n  return (\n    <div className=\"container\"\n      onWheel={wheelHandler}\n      onTouchMove={touchMoveHandler}\n      onTouchStart={touchStartHandler}\n      onTouchEnd={touchEndHandler}\n    >\n      <header>\n        <NavBar />\n      </header>\n      <main>\n        <Routes>\n          <Route path=\"/\" element={<Main />} />\n          <Route path=\"/cat\" element={<Category />} />\n          <Route path=\"/sign-in\" element={<SignIn />} />\n          <Route path=\"/sign-up\" element={<SignUp />} />\n          <Route path=\"/test\" element={<TestContainer />} />\n        </Routes>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}