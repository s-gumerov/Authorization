{"version":3,"sources":["Header/NavBar/styles/NavBar.module.css","Components/LinkComponents/LinkComponent.tsx","Header/NavBar/NavBarPC/NavBarPC.tsx","Header/NavBar/NavBarMobile/NavBarMobile.tsx","Header/NavBar/NavBar.tsx","Footer/Footer.tsx","Pages/Main/Main.tsx","Pages/Category/Category.tsx","Pages/Registration/RegistrationForm/RegistrationForm/RegistrationFormComponents/ShowPassword.tsx","Pages/Registration/RegistrationForm/RegistrationForm/RegistrationFormComponents/FormPrompt.tsx","Pages/Registration/RegistrationForm/RegistrationForm/RegistrationForm.tsx","Pages/Registration/SignUp.tsx","Pages/SignIn/SignIn.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","LinkComponent","className","path","text","to","NavBarPC","pages","navProps","map","page","index","wrapper","nav_PC","NavBarMobile","useState","classChange","setClassChange","onTouchStart","e","currentTarget","NavBar","window","screen","width","Footer","Main","Category","ShowPassword","onShowPassword","onHidePassword","icon","setIcon","onClick","FormPrompt","message","error","RegistrationForm","userNameCompleted","setUserNameCompleted","userEmailComleted","setUserEmailComleted","userPhoneNumberComleted","setUserPhoneNumberComleted","userPasswordComleted","setUserPasswordComleted","buttonDisabled","setButtonDisabled","id","promptProps","setPromptProps","toggleInputTypeRef","useRef","inputHandler","inputId","inputValue","checkData","target","value","checkedText","match","console","log","checkedValue","completed","errorMessage","type","completedHandler","length","changePasswordHandler","current","useEffect","onSubmit","preventDefault","htmlFor","name","placeholder","onChange","required","minLength","maxLength","ref","disabled","SignUp","SignIn","App","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fefb7bdb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_PC\":\"NavBar_nav_PC__1Iz-F\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './style/HeaderLink.css';\r\nimport './style/FormLink.css';\r\nimport { ILinkProps } from '../../Interfaces';\r\n\r\nexport const LinkComponent: React.FC<ILinkProps> = ({ className, path, text }) => {\r\n    return (\r\n        <NavLink to={path} className={className}>\r\n            {text}\r\n        </NavLink>\r\n    )\r\n}","import React from \"react\";\r\nimport wrapper from '../styles/NavBar.module.css';\r\nimport { LinkComponent } from \"../../../Components/LinkComponents/LinkComponent\"\r\nimport { IArrayLinkProps } from \"../../../Interfaces\"\r\n\r\nexport const NavBarPC: React.FC<IArrayLinkProps> = ({ navProps }) => {\r\n\r\n    const pages = navProps.map((page, index) =>\r\n        < LinkComponent key={index} {...page} />\r\n    );\r\n\r\n    return (\r\n        <nav className={wrapper.nav_PC}>\r\n            {pages}\r\n        </nav >\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport '../styles/style.css';\r\n\r\nexport const NavBarMobile: React.FC = () => {\r\n    const [classChange, setClassChange] = useState<boolean>(false);\r\n    const changeMenu = (e: React.TouchEvent<HTMLDivElement>) => {\r\n        setClassChange(!classChange);\r\n        classChange === true ? e.currentTarget.className = `nav_container change` :\r\n            e.currentTarget.className = `nav_container`\r\n    }\r\n\r\n    return (\r\n        <div className=\"nav_container\" onTouchStart={changeMenu} >\r\n            <div className=\"bar1\"></div>\r\n            <div className=\"bar2\"></div>\r\n            <div className=\"bar3\"></div>\r\n        </div >\r\n    )\r\n};","import React from \"react\";\r\nimport { NavBarPC } from \"./NavBarPC/NavBarPC\";\r\nimport { NavBarMobile } from \"./NavBarMobile/NavBarMobile\";\r\nimport { IArrayLinkProps, ILinkProps } from \"../.././Interfaces\"\r\nexport const NavBar: React.FC = () => {\r\n    // const [desktop, setDesktop] = useState<boolean>(false);\r\n    // const width = window.screen.width;\r\n    // width < 767 ? setDesktop(false) : setDesktop(true)\r\n    // console.log(width)\r\n    const mainPage: ILinkProps = {\r\n        text: 'Главная',\r\n        path: \"/\",\r\n        className: \"header-link\"\r\n    }\r\n\r\n    const categoryPage: ILinkProps = {\r\n        text: 'Категории',\r\n        path: \"/cat\",\r\n        className: \"header-link\"\r\n    }\r\n\r\n    const signUp: ILinkProps = {\r\n        text: 'Зарегистрироваться',\r\n        path: \"/sign-up\",\r\n        className: \"header-link\"\r\n    }\r\n\r\n    const navProps: IArrayLinkProps = { navProps: [mainPage, categoryPage, signUp] }\r\n\r\n    return (\r\n        <>\r\n            {window.screen.width < 767 ? <NavBarMobile /> : <NavBarPC {...navProps} />}\r\n        </>\r\n    )\r\n};","import React from \"react\";\r\nimport './style/style.css'\r\n\r\nexport const Footer: React.FC = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer-wrapper\">\r\n                footer\r\n            </div>\r\n\r\n        </footer>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <>\r\n            <h2>Hello, this main page</h2>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad laboriosam, ipsum ipsam et nisi minima numquam ut magnam, laborum aliquam iste eum delectus in ea sed unde, id sequi quaerat?\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad laboriosam, ipsum ipsam et nisi minima numquam ut magnam, laborum aliquam iste eum delectus in ea sed unde, id sequi quaerat?\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad laboriosam, ipsum ipsam et nisi minima numquam ut magnam, laborum aliquam iste eum delectus in ea sed unde, id sequi quaerat?\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad laboriosam, ipsum ipsam et nisi minima numquam ut magnam, laborum aliquam iste eum delectus in ea sed unde, id sequi quaerat?\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad laboriosam, ipsum ipsam et nisi minima numquam ut magnam, laborum aliquam iste eum delectus in ea sed unde, id sequi quaerat?\r\n            </p>\r\n        </>\r\n    )\r\n};","import React from \"react\";\r\n\r\nexport const Category: React.FC = () => {\r\n    return (\r\n        <h2>Category</h2>\r\n    )\r\n};","import React, { useState } from \"react\";\r\nimport './style/style.css';\r\nimport { IChangePassword } from \"../../../../../Interfaces\";\r\n\r\nexport const ShowPassword: React.FC<IChangePassword> = ({ onShowPassword, onHidePassword }) => {\r\n    const [icon, setIcon] = useState('icon-unchecked');\r\n\r\n\r\n    const clickHandler = (e: React.MouseEvent<HTMLElement>) => {\r\n        if (icon === 'icon-unchecked') {\r\n            setIcon('icon-checked');\r\n            onShowPassword();\r\n        } else {\r\n            setIcon('icon-unchecked')\r\n            onHidePassword();\r\n        }\r\n    };\r\n    return (\r\n        <div onClick={clickHandler} className=\"show-password\">\r\n            <div className={icon} >\r\n            </div>\r\n            Показать пароль\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { IPrompt } from \"../../../../../Interfaces\"\r\n\r\nexport const FormPrompt: React.FC<IPrompt> = ({ message, error }) => {\r\n\r\n    return (\r\n        <i className={`${error && 'form-prompt_error'}`}>\r\n            {message}\r\n        </i>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { IChangePassword, IPrompt } from \"../../../../Interfaces\";\r\nimport { ShowPassword } from \"./RegistrationFormComponents/ShowPassword\";\r\nimport { FormPrompt } from \"./RegistrationFormComponents/FormPrompt\";\r\n\r\nexport const RegistrationForm: React.FC = () => {\r\n    const [userNameCompleted, setUserNameCompleted] = useState<boolean>(false);\r\n    const [userEmailComleted, setUserEmailComleted] = useState<boolean>(false);\r\n    const [userPhoneNumberComleted, setUserPhoneNumberComleted] = useState<boolean>(false);\r\n    const [userPasswordComleted, setUserPasswordComleted] = useState<boolean>(false);\r\n    const [buttonDisabled, setButtonDisabled] = useState<boolean>(true);\r\n    const [promptProps, setPromptProps] = useState<IPrompt>({\r\n        id: '',\r\n        message: '',\r\n        error: false\r\n    });\r\n\r\n    const toggleInputTypeRef = useRef<HTMLInputElement>(null);\r\n\r\n    const formHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        buttonDisabled === false ? console.log('succes') : console.log('how could you press the button? it should be blocked');\r\n    };\r\n\r\n    const inputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const completedHandler = (type: string, completed: boolean) => {\r\n            if (type === 'userName') setUserNameCompleted(completed);\r\n            if (type === 'userEmail') setUserEmailComleted(completed);\r\n            if (type === 'userPhone') setUserPhoneNumberComleted(completed);\r\n            if (type === 'userPassword') setUserPasswordComleted(completed);\r\n        };\r\n\r\n        const getCheck = (inputId: string, inputValue: string) => {\r\n            if (inputId === 'userName') {\r\n                return {\r\n                    message: 'Не может содержать цифры и символы кроме пробела и дефиса',\r\n                    checkedText: inputValue.match(/[a-zA-Zа-яА-Я- ]/g)\r\n                }\r\n            } else if (inputId === 'userEmail') {\r\n                return {\r\n                    message: 'Может содержать email',\r\n                    checkedText: inputValue.match(/[a-zA-Z0-9.@]/g)\r\n                }\r\n            } else if (inputId === 'userPhone') {\r\n                return {\r\n                    message: 'Не может содержать цифры и символы кроме пробела и дефиса',\r\n                    checkedText: inputValue.match(/[0-9()-+]/g)\r\n                }\r\n            } else if (inputId === 'userPassword') {\r\n                return {\r\n                    message: 'Может содержать цифры и латинские буквы верхнего и нижнего регистра, минимум 4 символа',\r\n                    checkedText: inputValue.match(/[a-zA-Z0-9]/g)\r\n                }\r\n            } else {\r\n                console.log(`please add input:${inputId} in this function`);\r\n            }\r\n        };\r\n\r\n        const checkData = getCheck(e.target.id, e.target.value);\r\n        const message = checkData!.message;\r\n        const checkedValue = checkData!.checkedText;\r\n\r\n        let error = true;\r\n        let completed = true;\r\n\r\n        const errorMessage = (error: boolean, completed: boolean) => {\r\n            setPromptProps({\r\n                id: e.target.id,\r\n                message: message,\r\n                error: error\r\n            });\r\n            completedHandler(e.target.id, completed);\r\n        };\r\n\r\n        if (checkedValue === null && e.target.value.length > 0) {\r\n            errorMessage(error, !completed);\r\n        } else if (checkedValue !== null && checkedValue!.length > 0) {\r\n            checkedValue!.length === e.target.value.length ? errorMessage(!error, completed) : errorMessage(error, !completed);\r\n        } else {\r\n            e.target.value.length < 1 ? errorMessage(!error, !completed) : errorMessage(error, !completed);\r\n        };\r\n    };\r\n\r\n    const showPassword = () => {\r\n        if (toggleInputTypeRef.current?.type === 'password') toggleInputTypeRef.current.type = 'text';\r\n    };\r\n\r\n    const hidePassword = () => {\r\n        if (toggleInputTypeRef.current?.type === 'text') toggleInputTypeRef.current.type = 'password';\r\n    };\r\n\r\n    const changePasswordHandler: IChangePassword = {\r\n        onShowPassword: showPassword,\r\n        onHidePassword: hidePassword\r\n    };\r\n\r\n    useEffect(() => {\r\n        userNameCompleted === true &&\r\n            userEmailComleted === true &&\r\n            userPhoneNumberComleted === true &&\r\n            userPasswordComleted === true ?\r\n            setButtonDisabled(false) : setButtonDisabled(true);\r\n    }, [userNameCompleted, userEmailComleted, userPhoneNumberComleted, userPasswordComleted])\r\n\r\n    return (\r\n        <form\r\n            onSubmit={formHandler}\r\n            className=\"autorisation-form\">\r\n            <div className=\"form-prompt\">\r\n                {promptProps.id === \"userName\" && <FormPrompt {...promptProps} />}\r\n            </div>\r\n            <label htmlFor=\"userName\">Имя</label>\r\n            <input type=\"text\" name=\"userName\" id=\"userName\"\r\n                placeholder=\"Введите ваше имя\"\r\n                onChange={inputHandler}\r\n                onClick={() => setPromptProps({\r\n                    id: 'userName',\r\n                    message: 'Не может содержать цифры и символы кроме пробела и дефиса',\r\n                    error: false\r\n                })}\r\n            />\r\n            <div className=\"form-prompt\">\r\n                {promptProps.id === \"userEmail\" && <FormPrompt {...promptProps} />}\r\n            </div>\r\n            <label htmlFor=\"userEmail\">Email</label>\r\n            <input type=\"email\" name=\"userEmail\" id=\"userEmail\"\r\n                placeholder=\"Введите ваш email\"\r\n                onChange={inputHandler}\r\n                onClick={() => setPromptProps({\r\n                    id: 'userEmail',\r\n                    message: 'Может содержать email',\r\n                    error: false\r\n                })}\r\n            />\r\n            <div className=\"form-prompt\">\r\n                {promptProps.id === \"userPhone\" && <FormPrompt {...promptProps} />}\r\n            </div>\r\n            <label htmlFor=\"userPhone\">Номер телефона</label>\r\n            <input type=\"tel\" id=\"userPhone\" name=\"userPhone\"\r\n                required={true} minLength={11} maxLength={16}\r\n                placeholder=\"Введите ваш номер телефона\"\r\n                onChange={inputHandler}\r\n                onClick={() =>\r\n                    setPromptProps({\r\n                        id: 'userPhone',\r\n                        message: 'Может содержать 11 цифр, круглые скобки, дефис и знак плюс',\r\n                        error: false\r\n                    })\r\n                }\r\n            />\r\n            <div className=\"form-prompt\">\r\n                {promptProps.id === \"userPassword\" && <FormPrompt {...promptProps} />}\r\n            </div>\r\n            <label htmlFor=\"userPassword\">Пароль</label>\r\n            <input type=\"password\" name=\"userPassword\" id=\"userPassword\"\r\n                placeholder=\"Придумайте ваш пароль\"\r\n                ref={toggleInputTypeRef}\r\n                onChange={inputHandler}\r\n                onClick={() => setPromptProps({\r\n                    id: 'userPassword',\r\n                    message: 'Может содержать цифры и латинские буквы верхнего и нижнего регистра, минимум 4 символа',\r\n                    error: false\r\n                })}\r\n            />\r\n            <ShowPassword {...changePasswordHandler} />\r\n            <button type=\"submit\"\r\n                disabled={buttonDisabled ? true : false}\r\n                className={`autorisation-form__btn ${!buttonDisabled && 'autorisation-form_active-btn'}`}>\r\n                Зарегистрироваться\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { RegistrationForm } from './RegistrationForm/RegistrationForm/RegistrationForm';\r\nimport { LinkComponent } from \"../../Components/LinkComponents/LinkComponent\"\r\n\r\n// import { AutoriazationForm } from \"./AutoriazationForm\";\r\n\r\nexport const SignUp: React.FC = () => {\r\n\r\n    const formLink = {\r\n        text: 'Войти',\r\n        path: \"/sign-in\",\r\n        className: \"form-link\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"autorisation-container unselectable\">\r\n            <h2>Регистрация</h2>\r\n            <p>\r\n                Уже есть аккаунт?\r\n                <LinkComponent {...formLink} />\r\n            </p>\r\n            <RegistrationForm />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const SignIn: React.FC = () => {\r\n    return (\r\n        <h2>SignIn</h2>\r\n    )\r\n}","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { NavBar } from './Header/NavBar/NavBar';\nimport { Footer } from './Footer/Footer';\nimport './style/App.css';\nimport { Main } from './Pages/Main/Main';\nimport { Category } from './Pages/Category/Category';\nimport { SignUp } from './Pages/Registration/SignUp';\nimport { SignIn } from './Pages/SignIn/SignIn';\n\nexport const App: React.FC = () => {\n\n  return (\n    <div className=\"container\">\n      <header>\n        <NavBar />\n      </header>\n      <main>\n        <Routes>\n          <Route path=\"/\" element={<Main />} />\n          <Route path=\"/cat\" element={<Category />} />\n          <Route path=\"/sign-in\" element={<SignIn />} />\n          <Route path=\"/sign-up\" element={<SignUp />} />\n        </Routes>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}